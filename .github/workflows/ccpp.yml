name: C/C++ CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        # os: [windows-latest, ubuntu-latest, macos-latest]
        os:
          - name: windows-latest
            vcpkg-bootstrap: .\vcpkg\bootstrap-vcpkg.bat
            vcpkg: .\vcpkg\vcpkg.exe
            env:
              VCPKG_DEFAULT_TRIPLET: x64-windows-static
          - name: ubuntu-latest
            vcpkg-bootstrap: ./vcpkg/bootstrap-vcpkg.sh
            vcpkg: ./vcpkg/vcpkg
            env: {}
          - name: macos-latest
            vcpkg-bootstrap: ./vcpkg/bootstrap-vcpkg.sh
            vcpkg: ./vcpkg/vcpkg
            env: {}

    runs-on: ${{ matrix.os.name }}

    steps:
      - uses: actions/checkout@v2
      - name: Install Ubuntu packages
        run: sudo apt update && sudo apt install libgl1-mesa-dev libasound2-dev
        if: matrix.os.name == 'ubuntu-latest'
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: ${{ matrix.os.vcpkg-bootstrap }}
      - name: Install dependencies
        run: ${{ matrix.os.vcpkg }} install SDL2 doctest benchmark span-lite glew fmt range-v3 capstone[arm]
        env: ${{ matrix.os.env }}
      - name: Export vcpkg
        run: ${{ matrix.os.vcpkg }} export --output=gbemu-build-${{ runner.os }} --zip SDL2 doctest benchmark span-lite glew fmt range-v3 capstone[arm]
        env: ${{ matrix.os.env }}
      - name: Upload artifact for ${{ runner.os }}
        uses: actions/upload-artifact@v1
        with:
          name: vcpkg-export-${{ runner.os }}
          path: ./vcpkg/gbemu-build-${{ runner.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact for Linux
        uses: actions/download-artifact@v1
        with:
          name: vcpkg-export-Linux
      - name: Download artifact for macOS
        uses: actions/download-artifact@v1
        with:
          name: vcpkg-export-macOS
      - name: Download artifact for Windows
        uses: actions/download-artifact@v1
        with:
          name: vcpkg-export-Windows
      - name: Ls
        run: pwd && ls
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vcpkg-export-Windows/gbemu-build-Windows.zip
          asset_name: gbemu-build-Windows.zip
          asset_content_type: application/zip
      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vcpkg-export-Linux/gbemu-build-Linux.zip
          asset_name: gbemu-build-Linux.zip
          asset_content_type: application/zip
      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vcpkg-export-macOS/gbemu-build-macOS.zip
          asset_name: gbemu-build-macOS.zip
          asset_content_type: application/zip
